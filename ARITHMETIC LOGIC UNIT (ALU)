ALU VERILOG CODE
// Basic ALU Design
module ALU (
    input [3:0] A,       // 4-bit Input A
    input [3:0] B,       // 4-bit Input B
    input [2:0] SEL,     // 3-bit Select line
    output reg [3:0] OUT, // 4-bit Output
    output reg CARRY      // Carry flag for addition/subtraction
);

always @(*) begin
    case (SEL)
        3'b000: {CARRY, OUT} = A + B;   // Addition
        3'b001: {CARRY, OUT} = A - B;   // Subtraction
        3'b010: OUT = A & B;            // AND
        3'b011: OUT = A | B;            // OR
        3'b100: OUT = ~A;               // NOT
        default: OUT = 4'b0000;         // Default case
    endcase
end
endmodule

TESTBENCH CODE
`timescale 1ns / 1ps

module ALU_tb;

reg [3:0] A;
reg [3:0] B;
reg [2:0] SEL;
wire [3:0] OUT;
wire CARRY;

// Instantiate the ALU
ALU uut (
    .A(A),
    .B(B),
    .SEL(SEL),
    .OUT(OUT),
    .CARRY(CARRY)
);

initial begin
    // Display header
    $display("Time | A  | B  | SEL | OUT | CARRY");
    $display("----------------------------------");

    // Test addition
    A = 4'b0101; B = 4'b0011; SEL = 3'b000; #10;
    $display("%0dns | %b | %b | %b | %b | %b", $time, A, B, SEL, OUT, CARRY);

    // Test subtraction
    A = 4'b1000; B = 4'b0010; SEL = 3'b001; #10;
    $display("%0dns | %b | %b | %b | %b | %b", $time, A, B, SEL, OUT, CARRY);

    // Test AND
    A = 4'b1100; B = 4'b1010; SEL = 3'b010; #10;
    $display("%0dns | %b | %b | %b | %b | %b", $time, A, B, SEL, OUT, CARRY);

    // Test OR
    A = 4'b1100; B = 4'b1010; SEL = 3'b011; #10;
    $display("%0dns | %b | %b | %b | %b | %b", $time, A, B, SEL, OUT, CARRY);

    // Test NOT
    A = 4'b1100; SEL = 3'b100; #10;
    $display("%0dns | %b | %b | %b | %b | %b", $time, A, B, SEL, OUT, CARRY);

    $stop;
end

endmodule
